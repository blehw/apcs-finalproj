import java.util.*;import java.io.*;public class Battle {    public String routine(BaseChar p,BaseChar o) {	BaseChar player = p;	BaseChar opponent = o;	Scanner scan = new Scanner(System.in);	Random r = new Random();	boolean fight = true;	boolean turn = true;	if(opponent.getSpeed() > player.getSpeed()){   	    //whoever's speed is faster gets to go first	    turn = false;  	}	System.out.println("Foe " + opponent + " wants to battle!");	//BASIC fight sequence 		while (fight){	    //opponents stats	    System.out.println("\nFoe " + opponent.toString() + "'s health: " +			       + opponent.getHealth());	    	    //player's stats	    System.out.println(player.toString() + "'s health: " + 			       player.getHealth() + "\n");	    //*********************THE PLAYER'S TURN*************************	    while(fight && turn){		//Selection of PLAYER's move		System.out.println("What do you want to do? \n" +				   player.moveset()				   );				String move;		move = scan.nextLine();		move = move.toLowerCase();		move = move.replaceAll("\\s+","");		if (move.equals("tackle")) {		    System.out.println("\n" + player.tackle(opponent));		    turn = false;		}		/*		else if (move.equals("recover")) {		    System.out.println("\n" + player.recover());		    turn = false;		} 		*/		else {		    System.out.println(player.toString() + " can't do that!");		}		if(opponent.getHealth() <= 0){		    System.out.println("Foe " + opponent + 				       " has fainted! You win");		    int exp = 1 + player.getExperience() + 			(player.getLevel() * opponent.getLevel())/4;		    player.setExperience(exp);		    System.out.println(player + " gained " + 				       exp + " experience!");		    if (player.getExperience() >			(player.getLevel() * player.getLevel())) {			int leftover = (player.getLevel() * player.getLevel()) -			    player.getExperience();			player.setLevel(player.getLevel() + 1);			System.out.println(player + " leveled up!");			System.out.println(player + " is now level " +					   player.getLevel());			player.setHealth(player.getHealth() + 1 + r.nextInt(4));			player.setSpeed(player.getSpeed() + 1 + r.nextInt(4));			player.setAttack(player.getAttack() + 1 + r.nextInt(4));			player.setDefense(player.getDefense() + 1 + r.nextInt(4));			player.status();		    }		    System.exit(0);		    		}	    }	    //*********************THE OPPONENT'S TURN************************	    while(fight && !turn){		//dumb opponent's move selection (random)		String[] moves = opponent.getMoves();		int rand = r.nextInt(opponent.nummoves());		String move = moves[rand];		if (move == "TACKLE") {		    System.out.println(opponent.tackle(player));		}		/*		if (move == "RECOVER") {		    System.out.println(opponent.recover());		}		*/		if(player.getHealth() <= 0){		    System.out.println(player + " has fainted, do you want to send out another pokemon?");		    String newMon;		    newMon = scan.nextLine();		    //^^ This was done to later continue the game		    System.exit(0);		}		turn = true;	    }	}	return "";    }}