import java.util.*;import java.io.*;public class Battle {    public String blackout(Player player) {	if (player.getLocation().equals("Route 1")) {	    player.setLocation("Pallet Town");	    System.out.println(player + " blacked out!");	    HomeTown hometown = new HomeTown();	    hometown.home(player);	}	return "";    }    public int canContinue(Player player) {	for (int i=0;i<player.getPokemon().length && 		 player.getPokemon()[i] != null;i++) {	    if (player.getPokemon()[i].getHealth() > 0) {		return i;	    }	}	return -1;    }    public String trainerRoutine(Player player, Player opponent) {	while (canContinue(player) != -1 && canContinue(opponent) != -1) {	    routine(player.getPokemon()[canContinue(player)],		    opponent.getPokemon()[canContinue(opponent)]);	}	if (canContinue(player) != -1) {	    System.out.println(player + "  won!");	} else {	    System.out.println(player + "  has no more usable POKEMON!");	    blackout(player);	}	return "";    }    public String wildRoutine(Player player, BaseChar opponent) {	while (canContinue(player) != -1 && opponent.getHealth() > 0) {	    routine(player.getPokemon()[canContinue(player)],opponent);	}	if (canContinue(player) != -1) {	    System.out.println(player + "  won!");	} else {	    System.out.println(player + "  has no more usable POKEMON!");	    blackout(player);	}	return "";    }    public boolean routine(BaseChar player,BaseChar opponent) {	Scanner scan = new Scanner(System.in);	Random r = new Random();	boolean fight = true;	boolean turn = true;	if(opponent.getSpeed() > player.getSpeed()){   	    //whoever's speed is faster gets to go first	    turn = false;  	}	System.out.println("Foe " + opponent + " wants to battle!");	//BASIC fight sequence 		while (fight){	    //opponents stats	    System.out.println("\nFoe " + opponent.toString() + "'s health: " +			       + opponent.getHealth());	    	    //player's stats	    System.out.println(player.toString() + "'s health: " + 			       player.getHealth() + "\n");	    //*********************THE PLAYER'S TURN*************************	    while(fight && turn){		//Selection of PLAYER's move		System.out.println("What do you want to do? \n" +				   player.moveset()				   );				String move;		move = scan.nextLine();		move = move.toLowerCase();		move = move.replaceAll("\\s+","");		if (move.equals("tackle")) {		    System.out.println("\n" + player.tackle(opponent));		    turn = false;		}		/*		else if (move.equals("recover")) {		    System.out.println("\n" + player.recover());		    turn = false;		} 		*/		else {		    System.out.println(player.toString() + " can't do that!");		}		if(opponent.getHealth() <= 0){		    System.out.println("Foe " + opponent + 				       " has fainted!");		    int exp = 1 + player.getExperience() + 			(player.getLevel() * opponent.getLevel())/3;		    player.setExperience(exp);		    System.out.println(player + " gained " + 				       exp + " experience!");		    if (player.getExperience() >			(player.getLevel() * player.getLevel())) {			int leftover = (player.getLevel() * player.getLevel()) -			    player.getExperience();			player.setLevel(player.getLevel() + 1);			System.out.println(player + " leveled up!");			System.out.println(player + " is now level " +					   player.getLevel());			player.setHealth(player.getHealth() + 1 + r.nextInt(4));			player.setSpeed(player.getSpeed() + 1 + r.nextInt(4));			player.setAttack(player.getAttack() + 1 + r.nextInt(4));			player.setDefense(player.getDefense() + 1 + r.nextInt(4));			player.status();		    }		    return true;		}	    }	    //*********************THE OPPONENT'S TURN************************	    while(fight && !turn){		//dumb opponent's move selection (random)		String[] moves = opponent.getMoves();		int rand = r.nextInt(opponent.nummoves());		String move = moves[rand];		if (move == "TACKLE") {		    System.out.println(opponent.tackle(player));		}		/*		if (move == "RECOVER") {		    System.out.println(opponent.recover());		}		*/		if(player.getHealth() <= 0 ){		    player.setHealth(0);		    System.out.println(player + " has fainted.");		    return false;		}		turn = true;	    }	}	return true;    }}